{"ast":null,"code":"var _jsxFileName = \"/Users/emayom/Documents/doing/movie_app_2021/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie'; // import PropTypes from 'prop-types';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      console.log(movies); // this.setState({ movies: movies});\n\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n\n    this.renderMovies = () => {\n      const {\n        movies\n      } = this.state;\n      movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(Movie, {\n          id: movie.id,\n          year: movie.year,\n          title: movie.title,\n          summary: movie.summary,\n          poster: movie.medium_cover_image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? \"Loading ... \" : this.renderMovies()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/emayom/Documents/doing/movie_app_2021/src/App.js"],"names":["React","axios","Movie","App","Component","state","isLoading","movies","getMovies","data","get","console","log","setState","renderMovies","map","movie","id","year","title","summary","medium_cover_image","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADwB;;AAAA,SAMhCC,SANgC,GAMpB,YAAY;AACtB,YAAM;AAACC,QAAAA,IAAI,EAAE;AAACA,UAAAA,IAAI,EAAC;AAACF,YAAAA;AAAD;AAAN;AAAP,UAA0B,MAAMN,KAAK,CAACS,GAAN,CAAU,0DAAV,CAAtC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAFsB,CAItB;;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA,MAAF;AAAUD,QAAAA,SAAS,EAAE;AAArB,OAAd;AACD,KAZ+B;;AAAA,SAkBhCQ,YAlBgC,GAkBjB,MAAM;AACjB,YAAM;AAAEP,QAAAA;AAAF,UAAa,KAAKF,KAAxB;AACAE,MAAAA,MAAM,CAACQ,GAAP,CAAWC,KAAK,IAAI;AAClB,4BAAO,QAAC,KAAD;AAAO,UAAA,EAAE,EAAEA,KAAK,CAACC,EAAjB;AACO,UAAA,IAAI,EAAED,KAAK,CAACE,IADnB;AAEO,UAAA,KAAK,EAAEF,KAAK,CAACG,KAFpB;AAGO,UAAA,OAAO,EAAEH,KAAK,CAACI,OAHtB;AAIO,UAAA,MAAM,EAAEJ,KAAK,CAACK;AAJrB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKD,OAND;AAOH,KA3B+B;AAAA;;AAchCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,SAAL;AACD;;AAaDe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AAEA,wBACA;AAAA,gBACIC,SAAS,GAAE,cAAF,GAAmB,KAAKQ,YAAL;AADhC;AAAA;AAAA;AAAA;AAAA,YADA;AAKA;;AArC8B;;AAyClC,eAAeX,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\n// import PropTypes from 'prop-types';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {data: {data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    console.log(movies);\n\n    // this.setState({ movies: movies});\n    this.setState({ movies, isLoading: false });\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  renderMovies = () => {\n      const { movies } = this.state;\n      movies.map(movie => {\n        return <Movie id={movie.id}\n                      year={movie.year}\n                      title={movie.title}\n                      summary={movie.summary}\n                      poster={movie.medium_cover_image}/>\n      });\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    return  (\n    <div>\n      { isLoading? \"Loading ... \" : this.renderMovies() }\n    </div>\n    \n  )}\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}